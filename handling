// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract Handling {
   
    uint public value = 0;
    uint constant factor = 6;

    function testAssert(uint _num) public pure {
        assert(_num != 0);
    }

    function divide(uint _numerator, uint _denominator) public pure returns (uint) {
        require(_denominator != 0, "Please provide a non-zero denominator");
        require(_numerator >= _denominator, "Please provide a numerator greater than or equal to the denominator");
        return _numerator / _denominator;
    }

    function multiply(uint _a) public view returns (uint) {
        require(_a > 0, "Value of '_a' must be greater than zero to avoid a zero result");
        return _a * factor;
    }
}
